ALTER SESSION SET CURRENT_SCHEMA=APP_OWNER;

-- Dealerships across the country
CREATE TABLE dealership (
  dealership_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name          VARCHAR2(100) NOT NULL,
  city          VARCHAR2(80),
  region        VARCHAR2(80)
);

-- Employees mapped to DB usernames and a home dealership
CREATE TABLE employee (
  employee_id    NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  db_username    VARCHAR2(30) NOT NULL UNIQUE, -- e.g. SALES_ANNA, MGR_BOB (must match DB user)
  full_name      VARCHAR2(120) NOT NULL,
  role_code      VARCHAR2(10)  NOT NULL CHECK (role_code IN ('SALES','MANAGER')),
  dealership_id  NUMBER NOT NULL REFERENCES dealership(dealership_id)
);

-- Customers
CREATE TABLE customer (
  customer_id  NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  full_name    VARCHAR2(120) NOT NULL,
  phone        VARCHAR2(40),
  email        VARCHAR2(120)
);

-- Vehicle catalog (simplified)
CREATE TABLE vehicle (
  vehicle_id   NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  vin          VARCHAR2(32) UNIQUE,
  model        VARCHAR2(60) NOT NULL,  -- e.g. Golf, Tiguan
  trim_level   VARCHAR2(60),
  model_year   NUMBER(4),
  base_price   NUMBER(12,2)
);

-- Service catalog: extras, CASCO, warranty, servicing, etc.
CREATE TABLE service_item (
  service_id    NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  service_type  VARCHAR2(24) NOT NULL
    CHECK (service_type IN ('EXTRA_OPTION','CASCO','EXTENDED_WARRANTY','SERVICING','OTHER')),
  name          VARCHAR2(120) NOT NULL,
  description   VARCHAR2(4000),
  list_price    NUMBER(12,2)
);


-- Orders (one per car deal; services added as line items)
CREATE TABLE sale_order (
  order_id        NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  dealership_id   NUMBER NOT NULL REFERENCES dealership(dealership_id),
  customer_id     NUMBER NOT NULL REFERENCES customer(customer_id),
  salesperson_id  NUMBER NOT NULL REFERENCES employee(employee_id),
  manager_id      NUMBER REFERENCES employee(employee_id), -- optional approver
  order_date      DATE DEFAULT SYSDATE,
  status          VARCHAR2(20) DEFAULT 'OPEN' CHECK (status IN ('OPEN','APPROVED','INVOICED','CANCELLED')),
  total_amount    NUMBER(14,2),
  created_by      VARCHAR2(30) -- DB username for auditing (set by app)
);

DROP TABLE sale_item;


-- Car and service sales aren't tied, we can sell a car without a service or a service without a car
CREATE TABLE car_sale_item (
    item_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    order_id NUMBER NOT NULL REFERENCES sale_order(order_id) ON DELETE CASCADE,
    vehicle_id NUMBER NOT NULL REFERENCES vehicle(vehicle_id),
    unit_price NUMBER(12,2) NOT NULL,
    UNIQUE (order_id, vehicle_id)
);


CREATE TABLE service_sale_item (
  item_id     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  order_id    NUMBER NOT NULL REFERENCES sale_order(order_id) ON DELETE CASCADE,
  service_id  NUMBER NOT NULL REFERENCES service_item(service_id),
  qty         NUMBER(6,2) DEFAULT 1 CHECK (qty > 0),
  unit_price  NUMBER(12,2) NOT NULL,
  line_total  NUMBER(14,2) GENERATED ALWAYS AS (qty * unit_price) VIRTUAL
);

-- Basic privileges at the object level (further restricted by RLS/VPD below)
GRANT SELECT ON dealership  TO sales_role, manager_role;
GRANT SELECT ON employee    TO manager_role;         -- managers can see team roster
GRANT SELECT ON customer    TO sales_role, manager_role;
GRANT SELECT ON vehicle     TO sales_role, manager_role;
GRANT SELECT ON service_item TO sales_role, manager_role;

GRANT SELECT, INSERT, UPDATE ON sale_order TO sales_role, manager_role;
GRANT SELECT, INSERT, UPDATE, DELETE ON car_sale_item TO sales_role, manager_role;
GRANT SELECT, INSERT, UPDATE, DELETE ON service_sale_item TO sales_role, manager_role;
